static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route: 
                  cluster: upstream
          http_filters:
          - name: envoy.filters.http.wasm
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              config:
                name: "auth"
                # root_id MUST match registerRootContext() 2nd param
                root_id: "auth"
                # 'configuration' available at root_context.getConfiguration()
                configuration:
                  '@type': type.googleapis.com/google.protobuf.StringValue
                  value: ""
                vm_config:
                  vm_id: "my_vm_id"
                  runtime: "envoy.wasm.runtime.v8"
                  code:
                    # See https://github.com/envoyproxy/envoy-wasm/blob/master/api/envoy/config/core/v3/base.proto
                    local:
                      filename: build/release.wasm

          - name: envoy.filters.http.router
  - name: auth_service
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 8099
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/fetch"
                direct_response:
                  status: 200
                  body:
                    inline_string: 'foo'
          http_filters:
          - name: envoy.filters.http.router
  - name: upstream
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 9090
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/ok"
                direct_response:
                  status: 200
                  body:
                    inline_string: "hello world!\n"
          http_filters:
          - name: envoy.filters.http.router

  clusters:
  - name: auth_service
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: auth_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8099
  - name: upstream
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # when use postman-echo.com, it will return `HTTP/1.1 302 Found Redirecting to https://docs.postman-echo.com`
                address: docs.postman-echo.com
                port_value: 80
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

bootstrap_extensions:
# See: https://www.envoyproxy.io/docs/envoy/latest/configuration/other_features/wasm_service
- name: envoy.bootstrap.wasm
# - name: envoy.filters.http.wasm
  typed_config:
    '@type': type.googleapis.com/envoy.extensions.wasm.v3.WasmService
    singleton: true
    config:
      name: "auth_singleton"
      # root_id MUST match registerRootContext() 2nd param
      root_id: "auth_singleton"
      # 'configuration' available at root_context.getConfiguration()
      configuration:
        '@type': type.googleapis.com/google.protobuf.StringValue
        value: "auth_service"
      vm_config:
        vm_id: "my_vm_id"
        runtime: "envoy.wasm.runtime.v8"
        code:
          # See https://github.com/envoyproxy/envoy-wasm/blob/master/api/envoy/config/core/v3/base.proto
          local:
            filename: build/release.wasm
